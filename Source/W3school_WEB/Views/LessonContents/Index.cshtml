@{
    Layout = "Admin_Layout";
    ViewData["Title"] = "Lesson Contents";
}
<div class="page-content">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#">Home</a></li>
            <li class="breadcrumb-item"><a href="#">Lesson Contents</a></li>
            <li class="breadcrumb-item active" aria-current="page">List Lesson Contents</li>
        </ol>
    </nav>

    <div class="p-2">
        <div class="float-right">
            <button id="btnAddNew" type="button" class="btn btn-info"><i class="mr-2 fa fa-plus"></i>Add</button>  
        </div>
        <div class="clearfix"></div>
    </div>

    <div class="text-center">
        <div id="listData"></div>
    </div>
</div>

<script>
    var data = [];
    
        var store = new DevExpress.data.CustomStore({
            key: ["lessonContentId"],
            load: function () {
                var d = $.Deferred();
                    $.ajax({
                        "async": true,
                        "crossDomain": true,
                        "url": "@Url.Action("GetListLessContent", "LessonContents")",
                        "headers": {
                            "Content-Type": "application/json",
                            "cache-control": "no-cache"
                        },
                        "method": "GET"
                    }).done(function (result) {
                        data = result;
                        d.resolve(result);
                    }).fail(function (xhr) {
                        console.log("failed");
                    });

                return d.promise();
            }
        });

         var grid = $("#listData").dxDataGrid({
            dataSource: store,
            paging: {
                pageSize: 5
            },
            pager: {
                showPageSizeSelector: true,
                allowedPageSizes: [5, 10, 20, 50],
                showNavigationButtons: true,
                showInfo: true
            },
            remoteOperations: false,
            selection: {
                mode: 'simple'
            },
            editing: {
                mode: "row",
                useIcons: true,
                allowAdding: true,
                allowUpdating: true,
                allowDeleting: true
            },
            repaintChangesOnly: true,
            allowColumnReordering: true,
            rowAlternationEnabled: true,
            showBorders: true,
            forceIsoDateParsing: true,
            headerFilter: {
                visible: true
            },
            filterRow: { visible: true },
            dateSerializationFormat: "yyyy-MM-ddTHH:mm:ssx",
            allowColumnResizing: true,
            columnAutoWidth: true,
            //columnHidingEnabled: true,
            onToolbarPreparing: function (e) {
              e.toolbarOptions.items[0].visible = false;
               
            },
            @*onSaving: function(e) {
                e.cancel = true;
                if (e.changes.length) {

                    e.changes.forEach(function (item, index) {

                        if (item.type === "remove") {
                            //remove
                            var dataRemove = NewsCategory.find(x => x.LessonContentId === item.key.LessonContentId);

                            item.data = dataRemove;

                        }

                        if (item.type === "update") {
                            //update
                            var old = NewsCategory.find(x => x.LessonContentId === item.key.LessonContentId);

                            if (typeof item.data.ContentTitle != 'undefined') {
                                old.ContentTitle = item.data.ContentTitle;
                            };

                            if (typeof item.data.NewsCategoryNameEN != 'undefined') {
                                old.NewsCategoryNameEN = item.data.NewsCategoryNameEN;
                            };

                            if (typeof item.data.ContentType != 'undefined') {
                                old.ContentType = item.data.ContentType;
                            };

                            item.data = old;

                        }

                        if (item.type === "insert") {
                            //insert
                        }

                    });

                    $.ajax({
                        "async": false,
                        "crossDomain": true,
                        "url": "@Url.Action("UpdateNewsCategory","NewsCategory")",
                        "headers": {
                            "Content-Type": "application/json",
                            "cache-control": "no-cache"
                        },
                        "method": "POST",
                        "data": JSON.stringify(e.changes)
                    }).done(function (result) {

                        if (result.IsSuccess === true) {
                            DevExpress.ui.notify(result.Data.Message, "success");
                        }

                        e.component.refresh(true).done(function () {
                            e.component.cancelEditData();
                        });

                    }).fail(function (xhr) {
                        console.log("failed");
                    });
                }
            },*@
            columns: [                
                {
                    caption: "Lesson Content Id",
                    dataField: "lessonContentId",
                    allowEditing: false,
                    width: "10%",
                    visible: true
                },
                {
                    caption: "Lesson Content Title",
                    dataField: "contentTitle",
                    width: "10%",
                    validationRules: [{
                        type: "required",
                        message: "Lesson Content Title is required"
                    }]
                },
                {
                    caption: "Lesson ContentType Id",
                    dataField: "contentTypeId",
                    width: "10%",
                    validationRules: [{
                        type: "required",
                        message: "Lesson ContentType Id is required"
                    }]
                },
                {
                    caption: "Lesson Id",
                    dataField: "lessonId",
                    width: "10%",
                    allowEditing: false,
                    visible: true
                },
                {
                    caption: "Content",
                    dataField: "content",
                    width: "40%",
                    validationRules: [{
                        type: "required",
                        message: "Content Type is required"
                    }],                    
                },
                {
                    caption: "ContentOrder",
                    dataField: "contentOrder",
                    width: "10%",
                    validationRules: [{
                        type: "required",
                        message: "ContentOrder is required"
                    }],
                },{
                    type: "buttons",
                    width: 110,
                    buttons: [
                        {
                            hint: "Edit",
                            icon: "edit",
                            onClick: function(e) {
                                location.href = "@Url.Action("AddEditLessonContentsView", "LessonContents")?id=" + e.row.data.lessonContentId+"&method=edit" ;
                            }
                        },
                        {
                            hint: "Delete",
                            icon: "trash",
                            onClick: function (e) {
                                var result = DevExpress.ui.dialog.confirm("<i>Are you sure?</i>", "Confirm changes");
                                result.done(function (val) {
                                    if (val) {
                                        $.ajax({
                                            "async": true,
                                            "crossDomain": true,
                                            "url": "@Url.Action("DeleteLessonContent","LessonContents")?id=" + e.row.data.lessonContentId,
                                            "headers": {
                                                "Content-Type": "application/json",
                                                "cache-control": "no-cache"
                                            },
                                            "method": "get"

                                        }).done(function (result) {
                                            if (result.status == 1) {
                                                DevExpress.ui.notify(result.message, "success", 2000);
                                                grid.refresh();
                                            }                                               
                                            else 
                                                DevExpress.ui.notify(result.message, "warning", 2000);
                                        }).fail(function (xhr) {
                                            DevExpress.ui.notify("Error!Not completed", "warning", 2000);
                                        });
                                    } 
                                });
                            }
                        }
                    ]
                }
             ]
         }).dxDataGrid("instance");
    

    $("#btnAddNew").on("click", function () {
        location.href = "@Url.Action("AddEditLessonContentsView", "LessonContents")?method=insert";
    });

</script>