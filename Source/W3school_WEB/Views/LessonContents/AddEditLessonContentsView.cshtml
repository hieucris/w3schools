@using w3schools_API.Models;
@using Newtonsoft.Json
@{
    Layout = "Admin_Layout";
    ViewData["Title"] = "Add&Edit Lesson Contents";
}
@model w3schools_API.Models.LessonContents;
@{
    var data = Model;   
    var meth = ViewBag.Method;
}

<div class="container">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="#">Home</a></li>
            <li class="breadcrumb-item"><a href="#">Lesson Contents</a></li>
            <li class="breadcrumb-item active" aria-current="page">Add and Edit</li>
        </ol>
    </nav>
    <div  class="mt-5 row" >
        <div class="col-md-6">
            <div class="form-group">
                <h5>Content Title:</h5>
                <div class="w-75" id="ContentTitle"></div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <h5>Content Type:</h5>
                <div class="w-75" id="ContentTypeId"></div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <h5>Lesson Content Id:</h5>
                <div class="w-75" id="LessonContentId"></div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <h5>Content Order:</h5>
                <div class="w-75" id="ContentOrder"></div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <h5>Lesson:</h5>
                <div class="w-75" id="LessonId"></div>
            </div>
        </div>
        <div class="col-md-6 text-right" id="htmlSaveBtn"></div>
        <h5>Content:</h5>
        <div class="col-md-12" id="ctner">
            
        </div>
    </div>
</div>
<style>
    textarea:focus {
        outline: none !important;
        border: 1px solid #808080;
        box-shadow: 0 0 0.2rem #0094ff;
    }
    #ctner {
        background-color: #E7E9EB;
    }
    #targetCode{
        background-color:#fff !important;
    }
</style>
<script>
    var data =  @Html.Raw(JsonConvert.SerializeObject(data));    
    
    var currContentType = data.ContentTypeId;
    var editor;
    var content="";
    var iframe;
    var method = @Html.Raw(JsonConvert.SerializeObject(meth));

    var contentTypeStore = new DevExpress.data.CustomStore({
        key: "contentTypeId",
        loadMode:"raw",
        load: function () {
            var d = $.Deferred();
            $.ajax({
                "async": false,
                "crossDomain": true,
                "url": "@Url.Action("GetListContentType", "ContentType")",
                "headers": {
                    "Content-Type": "application/json",
                    "cache-control": "no-cache"
                },
                "method": "GET"
            }).done(function (result) {                
                d.resolve(result);
            }).fail(function (xhr) {
                console.log("failed");
            });
            return d.promise();
        }
    });
    var lessonStore = new DevExpress.data.CustomStore({
        key: "lessonId",
        loadMode:"raw",
        load: function () {
            var d = $.Deferred();
            $.ajax({
                "async": false,
                "crossDomain": true,
                "url": "@Url.Action("GetListLesson", "Lesson")",
                "headers": {
                    "Content-Type": "application/json",
                    "cache-control": "no-cache"
                },
                "method": "GET"
            }).done(function (result) {                
                d.resolve(result);
            }).fail(function (xhr) {
                console.log("failed");
            });
            return d.promise();
        }
    });

    var TitleTxtBox = $("#ContentTitle").dxTextBox({
        value: data.ContentTitle
    }).dxTextBox("instance");

    var LessonContentIdTxtBox = $("#LessonContentId").dxTextBox({
        value: data.LessonContentId,
        readOnly: true,
        hoverStateEnabled: false
    }).dxTextBox("instance");

    var ContentTypeIdSelectBox = $("#ContentTypeId").dxSelectBox({
        dataSource: contentTypeStore,
        displayExpr: "contentTypeName",
        valueExpr: "contentTypeId",
        value: currContentType,
        onValueChanged: function (e) {
            currContentType = e.value;
            renderEditor();
        }
    }).dxValidator({
        validationGroup: "data",
        validationRules: [{
            type: "required",
            message: " is required"
        }]
    }).dxSelectBox("instance");

    var ContentOrderTxtBox =
        $("#ContentOrder").dxNumberBox({
            value: data.ContentOrder,
        }).dxValidator({
            validationGroup: "data",
            validationRules: [{
                type: "required",
                message: " is required"
            }]
        }).dxNumberBox  ("instance");

    var LessonTxtBox = $("#LessonId").dxSelectBox({
        value: data.LessonId,
        dataSource: lessonStore,
        displayExpr: "lessonName",
        valueExpr: "lessonId",        
        onValueChanged: function (e) {
            
        }
    }).dxValidator({
        validationGroup: "data",
        validationRules: [{
            type: "required",
            message: " is required"
        }]
    }).dxSelectBox("instance");

    function renderEditor(){
        if (currContentType === 2) {
            $("#htmlSaveBtn").html('<button id = "saveBtn" onclick = "saveEdit()"  class="pl-3 pr-3 mr-3 btn btn-success" > Save <i class="pl-2 pr-2 fa fa-save"></i></button >');
            $("#ctner").html('<div style="background-color:#fff" class="m-4" id="Content">')
            editor = $("#Content").dxHtmlEditor({
                height: 300,
                value: data.Content,
                toolbar: {
                    items: [
                        "undo", "redo", "separator",
                        {
                            name: "size",
                            acceptedValues: ["8pt", "10pt", "12pt", "14pt", "18pt", "24pt", "36pt"]
                        },
                        {
                            name: "font",
                            acceptedValues: ["Arial", "Courier New", "Georgia", "Impact", "Lucida Console", "Tahoma", "Times New Roman", "Verdana"]
                        },
                        "separator",
                        "bold", "italic", "strike", "underline", "separator",
                        "alignLeft", "alignCenter", "alignRight", "alignJustify", "separator",
                        "color", "background"
                    ]
                }, onValueChanged: function (e) {
                    content = e.value;
                }
            }).dxHtmlEditor("instance");

        } else if (currContentType === 1 || currContentType ===3) {
            $("#htmlSaveBtn").empty();
            $("#Content").empty();
            var code;
            if (data.Content != null) {
                if (currContentType === 1)
                    code =  data.Content;
                else {
                    code = '<div class="main-content">\n    <div class="example">\n        <h3>Example</h3>\n        <div class="w3-code">\n            <\!-- start css-block -->\n' + data.Content + '\n \n \n \n \n \n            <\!-- end css-block -->\n        </div>\n        <a class="btn-link" target="_blank" href="">Try it Yourself >></a>\n    </div>\n</div>';
                }
            } else {
                if (currContentType === 1) {
                    code = content !=""? content: "";
                }
                else {
                    code = '<div class="main-content">\n    <div class="example">\n        <h3>Example</h3>\n        <div class="w3-code">\n            <\!-- start css-block -->\n            <\!-- end css-block -->\n        </div>\n        <a class="btn-link" target="_blank" href="">Try it Yourself >></a>\n    </div>\n</div>';
                }
            }   

            var html = '<div class="w-100" id="Content"><div class="row">'+
                '<div class="p-1 col-md-6 d-inline-flex justify-content-end"><button onclick="rotate()" class="mr-3 btn btn-success" id="rotate">Rotate <i class="ml-2 fa fa-arrows-alt"></i></button><button id = "runBtn" class="btn btn-success pl-3 pr-3" > Run <i class="pl-2 pr-2 fa fa-chevron-right"></i></button ></div>'+
                '<div class="p-1 col-md-6 text-right"><button id = "saveBtn" onclick = "saveEdit()" class="pl-3 pr-3 mr-3 btn btn-success" > Save <i class="pl-2 pr-2 fa fa-save"></i></button ></div>'+
                    '<div class="workspace col-md-6 pr-1">'+
                        '<textarea class="p-2" name="sourceCode" id="sourceCode">'+code+
                        '</textarea>'+
                    '</div>'+
                    '<div class="workspace col-md-6 pl-1">'+
                        '<iframe class="p-2"name="targetCode" id="targetCode"></iframe>'+
                    '</div>'+
            '</div></div>';
            $("#ctner").html(html);

            editor = CodeMirror.fromTextArea($("#sourceCode")[0], {
                // mode: "simple",
                //extraKeys: { "Ctrl-Space": "autocomplete" },
                //theme: "3024-dayv",
                //smartIndent: true,
                //value: html,
                lineNumbers: true,
                //autoCloseTags: true,
                //keyMap: "sublime",
                //scrollbarStyle:"overlay",
            });
            editor.on("change", function (cm) {
                content = cm.getValue();
                $("#sourceCode").html(content);
            });
            editor.setSize("100%", "75vh");

            $("#runBtn").click(function () {
                content = $("#sourceCode").val();
                iframe = document.getElementById('targetCode');
                runCode();
            });
        }
    }

    function saveEdit() {
        var valid = DevExpress.validationEngine.validateGroup("data");
        if (valid.isValid) {
            if (currContentType == 2) {
                content = editor.option("value");
            } else if (currContentType == 1 || currContentType == 3) {
                content = $("#sourceCode").val();
            }

            var obj = {};
            obj["ContentOrder"] = ContentOrderTxtBox.option("value");
            obj["LessonId"] = LessonTxtBox.option("value");
            obj["Content"] = content;
            obj["ContentTitle"] = TitleTxtBox.option("value");
            obj["LessonContentId"] = LessonContentIdTxtBox.option("value");
            obj["ContentTypeId"] = ContentTypeIdSelectBox.option("value");
            obj["Content"] = content;
            $.ajax({
                "async": true,
                "method": "POST",
                "crossDomain": true,
                "data": JSON.stringify(obj),
                "url": "@Url.Action("AddEditLessonContentsMethod", "LessonContents")?method=" + method,
                "headers": {
                    "Content-Type": "application/json",
                    "cache-control": "no-cache"
                }
            }).done(function (result) {
                if (result.data.status == 1)
                    DevExpress.ui.notify(result.data.message, "success", 2000);
                else
                    DevExpress.ui.notify(result.data.message, "warning", 2000);
            }).fail(function (xhr) {
                DevExpress.ui.notify("Error!Not completed", "warning", 2000);
            });
        }
    }


    function rotate() {
        var target = $(".workspace");
        if (target.hasClass("col-md-6")) {
            target.removeClass("col-md-6").addClass("col-md-12");
            target.children().css("height", "18rem");
        } else if (target.hasClass("col-md-12")) {
            target.removeClass("col-md-12").addClass("col-md-6");
            target.children().css("height", "33rem");
        }
    }
    $(function () {
        //render editor
        renderEditor();

    });


</script>   