#pragma checksum "D:\Git project\w3schools\Source\w3schools_WEB\Views\LessonContents\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "76e369ce7f0ba6de754120092e52ce6c908a9367"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_LessonContents_Index), @"mvc.1.0.view", @"/Views/LessonContents/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Git project\w3schools\Source\w3schools_WEB\Views\_ViewImports.cshtml"
using w3schools;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Git project\w3schools\Source\w3schools_WEB\Views\_ViewImports.cshtml"
using w3schools.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"76e369ce7f0ba6de754120092e52ce6c908a9367", @"/Views/LessonContents/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8fce59ba602e1b45291a8eaf0a5e04316d9abcdf", @"/Views/_ViewImports.cshtml")]
    public class Views_LessonContents_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\Git project\w3schools\Source\w3schools_WEB\Views\LessonContents\Index.cshtml"
  
    Layout = "Admin_Layout";
    ViewData["Title"] = "Lesson Contents";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div class=""page-content"">
    <nav aria-label=""breadcrumb"">
        <ol class=""breadcrumb"">
            <li class=""breadcrumb-item""><a href=""#"">Home</a></li>
            <li class=""breadcrumb-item""><a href=""#"">Lesson Contents</a></li>
            <li class=""breadcrumb-item active"" aria-current=""page"">List Lesson Contents</li>
        </ol>
    </nav>

    <div class=""p-2"">
        <div class=""float-right"">
            <button id=""btnAddNew"" type=""button"" class=""btn btn-info""><i class=""mr-2 fa fa-plus""></i>Add</button>  
        </div>
        <div class=""clearfix""></div>
    </div>

    <div class=""text-center"">
        <div id=""listData""></div>
    </div>
</div>

<script>
    var data = [];
    
        var store = new DevExpress.data.CustomStore({
            key: [""lessonContentId""],
            load: function () {
                var d = $.Deferred();
                    $.ajax({
                        ""async"": true,
                        ""crossDomain"": true,
           ");
            WriteLiteral("             \"url\": \"");
#nullable restore
#line 36 "D:\Git project\w3schools\Source\w3schools_WEB\Views\LessonContents\Index.cshtml"
                           Write(Url.Action("GetListLessContent", "LessonContents"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                        ""headers"": {
                            ""Content-Type"": ""application/json"",
                            ""cache-control"": ""no-cache""
                        },
                        ""method"": ""GET""
                    }).done(function (result) {
                        data = result;
                        d.resolve(result);
                    }).fail(function (xhr) {
                        console.log(""failed"");
                    });

                return d.promise();
            }
        });

         var grid = $(""#listData"").dxDataGrid({
            dataSource: store,
            paging: {
                pageSize: 5
            },
            pager: {
                showPageSizeSelector: true,
                allowedPageSizes: [5, 10, 20, 50],
                showNavigationButtons: true,
                showInfo: true
            },
            remoteOperations: false,
            selection: {
                mode: 'simple'
            ");
            WriteLiteral(@"},
            editing: {
                mode: ""row"",
                useIcons: true,
                allowAdding: true,
                allowUpdating: true,
                allowDeleting: true
            },
            repaintChangesOnly: true,
            allowColumnReordering: true,
            rowAlternationEnabled: true,
            showBorders: true,
            forceIsoDateParsing: true,
            headerFilter: {
                visible: true
            },
            filterRow: { visible: true },
            dateSerializationFormat: ""yyyy-MM-ddTHH:mm:ssx"",
            allowColumnResizing: true,
            columnAutoWidth: true,
            //columnHidingEnabled: true,
            onToolbarPreparing: function (e) {
              e.toolbarOptions.items[0].visible = false;
               
            },
");
            WriteLiteral(@"            columns: [                
                {
                    caption: ""Lesson Content Id"",
                    dataField: ""lessonContentId"",
                    allowEditing: false,
                    width: ""10%"",
                    visible: true
                },
                {
                    caption: ""Lesson Content Title"",
                    dataField: ""contentTitle"",
                    width: ""10%"",
                    validationRules: [{
                        type: ""required"",
                        message: ""Lesson Content Title is required""
                    }]
                },
                {
                    caption: ""Lesson ContentType Id"",
                    dataField: ""contentTypeId"",
                    width: ""10%"",
                    validationRules: [{
                        type: ""required"",
                        message: ""Lesson ContentType Id is required""
                    }]
                },
                {
   ");
            WriteLiteral(@"                 caption: ""Lesson Id"",
                    dataField: ""lessonId"",
                    width: ""10%"",
                    allowEditing: false,
                    visible: true
                },
                {
                    caption: ""Content"",
                    dataField: ""content"",
                    width: ""40%"",
                    validationRules: [{
                        type: ""required"",
                        message: ""Content Type is required""
                    }],                    
                },
                {
                    caption: ""ContentOrder"",
                    dataField: ""contentOrder"",
                    width: ""10%"",
                    validationRules: [{
                        type: ""required"",
                        message: ""ContentOrder is required""
                    }],
                },{
                    type: ""buttons"",
                    width: 110,
                    buttons: [
                  ");
            WriteLiteral("      {\r\n                            hint: \"Edit\",\r\n                            icon: \"edit\",\r\n                            onClick: function(e) {\r\n                                location.href = \"");
#nullable restore
#line 215 "D:\Git project\w3schools\Source\w3schools_WEB\Views\LessonContents\Index.cshtml"
                                            Write(Url.Action("AddEditLessonContentsView", "LessonContents"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"?id="" + e.row.data.lessonContentId+""&method=edit"" ;
                            }
                        },
                        {
                            hint: ""Delete"",
                            icon: ""trash"",
                            onClick: function (e) {
                                var result = DevExpress.ui.dialog.confirm(""<i>Are you sure?</i>"", ""Confirm changes"");
                                result.done(function (val) {
                                    if (val) {
                                        $.ajax({
                                            ""async"": true,
                                            ""crossDomain"": true,
                                            ""url"": """);
#nullable restore
#line 228 "D:\Git project\w3schools\Source\w3schools_WEB\Views\LessonContents\Index.cshtml"
                                               Write(Url.Action("DeleteLessonContent","LessonContents"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"?id="" + e.row.data.lessonContentId,
                                            ""headers"": {
                                                ""Content-Type"": ""application/json"",
                                                ""cache-control"": ""no-cache""
                                            },
                                            ""method"": ""get""

                                        }).done(function (result) {
                                            if (result.status == 1) {
                                                DevExpress.ui.notify(result.message, ""success"", 2000);
                                                grid.refresh();
                                            }                                               
                                            else 
                                                DevExpress.ui.notify(result.message, ""warning"", 2000);
                                        }).fail(function (xhr) {
                                ");
            WriteLiteral(@"            DevExpress.ui.notify(""Error!Not completed"", ""warning"", 2000);
                                        });
                                    } 
                                });
                            }
                        }
                    ]
                }
             ]
         }).dxDataGrid(""instance"");
    

    $(""#btnAddNew"").on(""click"", function () {
        location.href = """);
#nullable restore
#line 256 "D:\Git project\w3schools\Source\w3schools_WEB\Views\LessonContents\Index.cshtml"
                    Write(Url.Action("AddEditLessonContentsView", "LessonContents"));

#line default
#line hidden
#nullable disable
            WriteLiteral("?method=insert\";\r\n    });\r\n\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
