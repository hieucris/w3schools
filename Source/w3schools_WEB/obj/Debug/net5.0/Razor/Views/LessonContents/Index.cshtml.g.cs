#pragma checksum "C:\Users\HieuCris\Downloads\website\Source\w3schools_WEB\Views\LessonContents\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fb12aba9eeb0fe0e9dd286b29baaa1c00243a62e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_LessonContents_Index), @"mvc.1.0.view", @"/Views/LessonContents/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\HieuCris\Downloads\website\Source\w3schools_WEB\Views\_ViewImports.cshtml"
using w3schools;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\HieuCris\Downloads\website\Source\w3schools_WEB\Views\_ViewImports.cshtml"
using w3schools.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fb12aba9eeb0fe0e9dd286b29baaa1c00243a62e", @"/Views/LessonContents/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8fce59ba602e1b45291a8eaf0a5e04316d9abcdf", @"/Views/_ViewImports.cshtml")]
    public class Views_LessonContents_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\HieuCris\Downloads\website\Source\w3schools_WEB\Views\LessonContents\Index.cshtml"
  
    Layout = "Admin_Layout";
    ViewData["Title"] = "Lesson Contents";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div class=""page-content"">
    <div class=""p-2"">
        <div class=""float-right"">
            <button id=""btnAddNew"" type=""button"" class=""btn btn-info""><i class=""mr-2 fa fa-plus""></i>Add</button>  
        </div>
        <div class=""clearfix""></div>
    </div>

    <div class=""text-center grid-ctn"">
        <div id=""listData""></div>
    </div>
</div>

<script>
    var data = [];

    const listLesson = new DevExpress.data.CustomStore({
        key: ""lessonId"",
        loadMode:""raw"",
        load: function () {
            var d = $.Deferred();
            $.ajax({
                ""async"": true,
                ""crossDomain"": true,
                ""url"": """);
#nullable restore
#line 29 "C:\Users\HieuCris\Downloads\website\Source\w3schools_WEB\Views\LessonContents\Index.cshtml"
                   Write(Url.Action("GetListLesson", "Lesson"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                ""headers"": {
                    ""Content-Type"": ""application/json"",
                    ""cache-control"": ""no-cache""
                },
                ""method"": ""GET""
            }).done(function (result) {
                d.resolve(result);
            }).fail(function (xhr) {
                console.log(""failed"");
            });
            return d.promise();
        }
    });

    const listContentType = new DevExpress.data.CustomStore({
        key: ""contentTypeId"",
        loadMode:""raw"",
        load: function () {
            var d = $.Deferred();
            $.ajax({
                ""async"": true,
                ""crossDomain"": true,
                ""url"": """);
#nullable restore
#line 52 "C:\Users\HieuCris\Downloads\website\Source\w3schools_WEB\Views\LessonContents\Index.cshtml"
                   Write(Url.Action("GetListContentType", "ContentType"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                ""headers"": {
                    ""Content-Type"": ""application/json"",
                    ""cache-control"": ""no-cache""
                },
                ""method"": ""GET""
            }).done(function (result) {
                d.resolve(result);
            }).fail(function (xhr) {
                console.log(""failed"");
            });
            return d.promise();
        }
    });

    var store = new DevExpress.data.CustomStore({
        key: [""lessonContentId""],
        load: function () {
            var d = $.Deferred();
                $.ajax({
                    ""async"": true,
                    ""crossDomain"": true,
                    ""url"": """);
#nullable restore
#line 74 "C:\Users\HieuCris\Downloads\website\Source\w3schools_WEB\Views\LessonContents\Index.cshtml"
                       Write(Url.Action("GetListLessContent", "LessonContents"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@""",
                    ""headers"": {
                        ""Content-Type"": ""application/json"",
                        ""cache-control"": ""no-cache""
                    },
                    ""method"": ""GET""
                }).done(function (result) {
                    data = result;
                    d.resolve(result);
                }).fail(function (xhr) {
                    console.log(""failed"");
                });

            return d.promise();
        }
    });

    var grid = $(""#listData"").dxDataGrid({
        dataSource: store,
        paging: {
            pageSize: 5
        },
        pager: {
            showPageSizeSelector: true,
            allowedPageSizes: [5, 10, 20, 50],
            showNavigationButtons: true,
            showInfo: true
        },
        remoteOperations: false,
        selection: {
            mode: 'simple'
        },
        editing: {
            mode: ""row"",
            useIcons: true,
            allowAdding: true,
      ");
            WriteLiteral(@"      allowUpdating: true,
            allowDeleting: true
        },
        repaintChangesOnly: true,
        allowColumnReordering: true,
        rowAlternationEnabled: true,
        showBorders: true,
        forceIsoDateParsing: true,
        headerFilter: {
            visible: true
        },
        filterRow: { visible: true },
        dateSerializationFormat: ""yyyy-MM-ddTHH:mm:ssx"",
        allowColumnResizing: true,
        columnAutoWidth: true,
        //columnHidingEnabled: true,
        onToolbarPreparing: function (e) {
            e.toolbarOptions.items[0].visible = false;
            }, masterDetail: {
                enabled: true,
                template(container, options) {
                    const curr = options.data;

                    $('<div>')
                        .html(curr.content)
                        .appendTo(container);
                }
            },
        columns: [
            {
                caption: ""Lesson Content Id"",
      ");
            WriteLiteral(@"          dataField: ""lessonContentId"",
                allowEditing: false,
                width: ""15%"",
                visible: false
            },
            {
                caption: ""Lesson Content Title"",
                dataField: ""contentTitle"",
                width: ""15%"",
                validationRules: [{
                    type: ""required"",
                    message: ""Lesson Content Title is required""
                }]
            },
            {
                caption: ""Lesson ContentType"",
                dataField: ""contentTypeId"",
                width: ""15%"",
                validationRules: [{
                    type: ""required"",
                    message: ""LessonContentType is required""
                }], lookup: {
                    dataSource: listContentType,
                    valueExpr: 'contentTypeId',
                    displayExpr: 'contentTypeName',
                },
            },
            {
                caption: ""Lesson"",
  ");
            WriteLiteral(@"              dataField: ""lessonId"",
                width: ""15%"",
                allowEditing: false,
                visible: true, validationRules: [{
                    type: ""required"",
                    message: ""LessonName is required""
                }],
                lookup: {
                    dataSource: listLesson,
                    valueExpr: 'lessonId',
                    displayExpr: 'lessonName',
                },
            },
            {
                caption: ""Content"",
                dataField: ""content"",
                width: ""40%"",
                validationRules: [{
                    type: ""required"",
                    message: ""Content Type is required""
                }],
            },
            {
                caption: ""ContentOrder"",
                dataField: ""contentOrder"",
                width: ""10%"",
                validationRules: [{
                    type: ""required"",
                    message: ""ContentOrder is requ");
            WriteLiteral(@"ired""
                }],
            },{
                type: ""buttons"",
                width: 110,
                buttons: [
                    {
                        hint: ""Edit"",
                        icon: ""edit"",
                        onClick: function(e) {
                            location.href = """);
#nullable restore
#line 208 "C:\Users\HieuCris\Downloads\website\Source\w3schools_WEB\Views\LessonContents\Index.cshtml"
                                        Write(Url.Action("AddEditLessonContentsView", "LessonContents"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"?id="" + e.row.data.lessonContentId + ""&method=edit"";
                        }
                    },
                    {
                        hint: ""Delete"",
                        icon: ""trash"",
                        onClick: function (e) {
                            var result = DevExpress.ui.dialog.confirm(""<i>Are you sure?</i>"", ""Confirm changes"");
                            result.done(function (val) {
                                if (val) {
                                    $.ajax({
                                        ""async"": true,
                                        ""crossDomain"": true,
                                        ""url"": """);
#nullable restore
#line 221 "C:\Users\HieuCris\Downloads\website\Source\w3schools_WEB\Views\LessonContents\Index.cshtml"
                                           Write(Url.Action("DeleteLessonContent","LessonContents"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"?id="" + e.row.data.lessonContentId,
                                        ""headers"": {
                                            ""Content-Type"": ""application/json"",
                                            ""cache-control"": ""no-cache""
                                        },
                                        ""method"": ""get""

                                    }).done(function (result) {
                                        if (result.status == 1) {
                                            DevExpress.ui.notify(result.message, ""success"", 2000);
                                            grid.refresh();
                                        }
                                        else
                                            DevExpress.ui.notify(result.message, ""warning"", 2000);
                                    }).fail(function (xhr) {
                                        DevExpress.ui.notify(""Error!Not completed"", ""warning"", 2000);
                             ");
            WriteLiteral(@"       });
                                }
                            });
                        }
                    }
                ]
            }
            ]
        }).dxDataGrid(""instance"");

    $(""#btnAddNew"").on(""click"", function () {
        location.href = """);
#nullable restore
#line 248 "C:\Users\HieuCris\Downloads\website\Source\w3schools_WEB\Views\LessonContents\Index.cshtml"
                    Write(Url.Action("AddEditLessonContentsView", "LessonContents"));

#line default
#line hidden
#nullable disable
            WriteLiteral("?method=insert&order=\" + (data[data.length - 1].contentOrder + 1);\r\n    });\r\n\r\n    $(function () {\r\n        $(\".breadcrumb\").children().last().find(\"span\").text(\"Lesson Content\");\r\n    })\r\n\r\n</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
